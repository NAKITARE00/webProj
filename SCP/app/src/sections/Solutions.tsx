"use client";
import React, { useState } from "react";
import Image from "next/image";
import vision from "@/assets/images/vision.png";
import report from "@/assets/images/report.png";
import chat from "@/assets/images/chat.png";
import detective from "@/assets/images/detective.png";
import code from "@/assets/images/code.png";

const solutions = [
    {
        name: "VisionAI",
        icon: vision,
        description:
            "An AI application capable of training a new model to recognize a specific product.",
    },
    {
        name: "ChatAI",
        icon: chat,
        description:
            "An AI chatbot that responds exclusively to queries based on a provided custom dataset.",
    },
    {
        name: "ReportAI",
        icon: report,
        description:
            "An AI-powered app that connects to MySQL database and generates Excel reports via natural language input.",
    },
    {
        name: "CodeCanvas AI",
        icon: code,
        description:
            "An AI-powered application that transforms images into front-end code, including HTML,CSS, and JavaScript.",
    },
    {
        name: "Detective AI",
        icon: detective,
        description:
            "An application that identifies whether a piece of text was generated by an AI tool or written by a human.",
    },
];

export default function Solutions() {
    const [emails, setEmails] = useState<string[]>(
        Array(solutions.length).fill("")
    );

    const handleChange = (idx: number, value: string) => {
        setEmails((prev: string[]) => {
            const updated = [...prev];
            updated[idx] = value;
            return updated;
        });
    };

    const handleSubmit = (idx: number, e: React.FormEvent<HTMLFormElement>) => {
        e.preventDefault();
        alert(
            `Demo request for ${solutions[idx].name} submitted! Email: ${emails[idx]}`
        );
        setEmails((prev: string[]) => {
            const updated = [...prev];
            updated[idx] = "";
            return updated;
        });
    };

    return (
        <section className="py-16 bg-gray-50" id="solutions">
            <div className="container mx-auto px-4">
                <div className="overflow-hidden w-full mb-10">
                    <div className="animate-marquee">
                        {[...solutions, ...solutions].map((sol, idx) => (
                            <div
                                key={idx}
                                className="flex items-center justify-center px-8"
                            >
                                <Image
                                    src={sol.icon}
                                    alt={sol.name}
                                    width={40}
                                    height={40}
                                    className="opacity-80 hover:opacity-100 transition"
                                />
                            </div>
                        ))}
                    </div>
                </div>

                <h2 className="text-3xl text-black sm:text-2xl md:text-4xl font-medium mb-10 text-center">
                    Our Solutions
                </h2>
                <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
                    {solutions.map((sol, idx) => (
                        <form
                            key={sol.name}
                            onSubmit={(e) => handleSubmit(idx, e)}
                            className="bg-white shadow-md rounded-lg p-8 flex flex-col items-center gap-4"
                        >
                            <Image
                                src={sol.icon}
                                alt={sol.name}
                                width={48}
                                height={48}
                                className="mb-2"
                            />
                            <h3 className="text-xl text-black font-semibold mb-1 text-center">
                                {sol.name}
                            </h3>
                            <p className="text-gray-600 text-center mb-4">
                                {sol.description}
                            </p>
                            <input
                                type="email"
                                name="email"
                                placeholder="Business Email"
                                value={emails[idx]}
                                onChange={(e) =>
                                    handleChange(idx, e.target.value)
                                }
                                className="border border-gray-300 rounded px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500"
                                required
                            />
                            <button
                                type="submit"
                                className="border bg-lime-400 text-neutral-950 border-lime-400rounded-full px-6 font-medium  rounded px-4 py-2 mt-2 hover:bg-gray-800 hover:font-bold hover:text-lime-400 transition"
                            >
                                Get Demo
                            </button>
                        </form>
                    ))}
                </div>
            </div>
        </section>
    );
}
